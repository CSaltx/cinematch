{"ast":null,"code":"var _jsxFileName = \"/Users/coby/projects/movie_recommendation/cinematch/frontend/chat-app/src/components/ChatUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ChatContainer, MessageList, MessageInput, ConversationHeader, Message, Loader } from \"@chatscope/chat-ui-kit-react\";\nimport ApiNotFound from \"./ApiNotFound.js\";\nimport \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\"; // Ensure you import the styles\nimport \"./ChatComponent.css\"; // Import your custom CSS for this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [alive, setAlive] = useState(false);\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        fetch(\"http://127.0.0.1:5000/health\").then(response => response.json()).then(data => {\n          if (data.status === \"up\") {\n            setAlive(true);\n          } else {\n            setAlive(false);\n          }\n        }).catch(error => {\n          console.error(\"API check failed\", error);\n          setAlive(false);\n        });\n      } catch (error) {\n        console.error(\"API check failed\", error);\n        setAlive(false);\n      }\n    };\n\n    // Call the checkStatus function\n    checkStatus();\n    const interval = setInterval(checkStatus, 10000); // Check every 10 seconds\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, []); // The empty array causes this effect to only run on mount and unmount\n\n  const sendMessage = content => {\n    setIsLoading(true);\n    const userMessage = {\n      message: content,\n      direction: \"outgoing\"\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    fetch(\"http://127.0.0.1:5000/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: content\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(responseData => {\n      const botMessage = {\n        message: responseData.response,\n        direction: \"incoming\" // Responses from the bot are 'incoming'\n      };\n      // Add the bot's response message\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    }).catch(error => {\n      console.error(\"Could not send the message to the API\", error);\n    }).finally(() => {\n      setIsLoading(false); // End loading\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container bg-gray-100 rounded-lg shadow p-4\",\n    children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n      className: \"flex flex-col h-full bg-gray-800 rounded-xl\",\n      children: [/*#__PURE__*/_jsxDEV(ConversationHeader, {\n        className: \"border-b-2 border-gray-700 p-4 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        className: \"flex-grow overflow-y-auto\",\n        children: isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator flex items-center justify-center p-2\",\n          children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        className: \"border-t-2 border-gray-700 p-4 bg-gray-700\",\n        placeholder: \"Type message here\",\n        onSend: sendMessage,\n        attachButton: false,\n        inputClassName: \"text-white placeholder-gray-300\",\n        sendButtonClassName: \"text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"UrGrQHNwjbF3YcfoiLlxlB0fHpU=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","ChatContainer","MessageList","MessageInput","ConversationHeader","Message","Loader","ApiNotFound","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","isLoading","setIsLoading","alive","setAlive","checkStatus","fetch","then","response","json","data","status","catch","error","console","interval","setInterval","clearInterval","sendMessage","content","userMessage","message","direction","prevMessages","method","headers","body","JSON","stringify","ok","Error","responseData","botMessage","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onSend","attachButton","inputClassName","sendButtonClassName","_c","$RefreshReg$"],"sources":["/Users/coby/projects/movie_recommendation/cinematch/frontend/chat-app/src/components/ChatUI.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ChatContainer,\n  MessageList,\n  MessageInput,\n  ConversationHeader,\n  Message,\n  Loader,\n} from \"@chatscope/chat-ui-kit-react\";\nimport ApiNotFound from \"./ApiNotFound.js\";\nimport \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\"; // Ensure you import the styles\nimport \"./ChatComponent.css\"; // Import your custom CSS for this component\n\nconst ChatComponent = () => {\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [alive, setAlive] = useState(false);\n\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        fetch(\"http://127.0.0.1:5000/health\")\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.status === \"up\") {\n              setAlive(true);\n            } else {\n              setAlive(false);\n            }\n          })\n          .catch((error) => {\n            console.error(\"API check failed\", error);\n            setAlive(false);\n          });\n      } catch (error) {\n        console.error(\"API check failed\", error);\n        setAlive(false);\n      }\n    };\n\n    // Call the checkStatus function\n    checkStatus();\n\n    const interval = setInterval(checkStatus, 10000); // Check every 10 seconds\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, []); // The empty array causes this effect to only run on mount and unmount\n\n  const sendMessage = (content) => {\n    setIsLoading(true);\n\n    const userMessage = {\n      message: content,\n      direction: \"outgoing\",\n    };\n\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n    fetch(\"http://127.0.0.1:5000/recommend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ message: content }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((responseData) => {\n        const botMessage = {\n          message: responseData.response,\n          direction: \"incoming\", // Responses from the bot are 'incoming'\n        };\n        // Add the bot's response message\n        setMessages((prevMessages) => [...prevMessages, botMessage]);\n      })\n      .catch((error) => {\n        console.error(\"Could not send the message to the API\", error);\n      })\n      .finally(() => {\n        setIsLoading(false); // End loading\n      });\n  };\n\n  return (\n    <div className=\"chat-container bg-gray-100 rounded-lg shadow p-4\">\n      {/* {alive ? ( */}\n      <ChatContainer className=\"flex flex-col h-full bg-gray-800 rounded-xl\">\n        <ConversationHeader className=\"border-b-2 border-gray-700 p-4 text-white\">\n          {/* Your header content here */}\n        </ConversationHeader>\n        <MessageList className=\"flex-grow overflow-y-auto\">\n          {isLoading && (\n            <div className=\"typing-indicator flex items-center justify-center p-2\">\n              <Loader /> {/* Style this as needed */}\n            </div>\n          )}\n          {/* Map over messages */}\n        </MessageList>\n        <MessageInput\n          className=\"border-t-2 border-gray-700 p-4 bg-gray-700\"\n          placeholder=\"Type message here\"\n          onSend={sendMessage}\n          attachButton={false}\n          inputClassName=\"text-white placeholder-gray-300\"\n          sendButtonClassName=\"text-blue-500\"\n        />\n      </ChatContainer>\n      {/* ) : (\n        <ApiNotFound />\n      )} */}\n    </div>\n  );\n};\n\nexport default ChatComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,kBAAkB,EAClBC,OAAO,EACPC,MAAM,QACD,8BAA8B;AACrC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAO,2DAA2D,CAAC,CAAC;AACpE,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFC,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;UACd,IAAIA,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;YACxBP,QAAQ,CAAC,IAAI,CAAC;UAChB,CAAC,MAAM;YACLA,QAAQ,CAAC,KAAK,CAAC;UACjB;QACF,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;UACxCT,QAAQ,CAAC,KAAK,CAAC;QACjB,CAAC,CAAC;MACN,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;QACxCT,QAAQ,CAAC,KAAK,CAAC;MACjB;IACF,CAAC;;IAED;IACAC,WAAW,CAAC,CAAC;IAEb,MAAMU,QAAQ,GAAGC,WAAW,CAACX,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IAClD,OAAO,MAAMY,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMG,WAAW,GAAIC,OAAO,IAAK;IAC/BjB,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMkB,WAAW,GAAG;MAClBC,OAAO,EAAEF,OAAO;MAChBG,SAAS,EAAE;IACb,CAAC;IAEDtB,WAAW,CAAEuB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,WAAW,CAAC,CAAC;IAE7Dd,KAAK,CAAC,iCAAiC,EAAE;MACvCkB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,OAAO,EAAEF;MAAQ,CAAC;IAC3C,CAAC,CAAC,CACCZ,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACqB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBtB,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC3D;MACA,OAAOH,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEwB,YAAY,IAAK;MACtB,MAAMC,UAAU,GAAG;QACjBX,OAAO,EAAEU,YAAY,CAACvB,QAAQ;QAC9Bc,SAAS,EAAE,UAAU,CAAE;MACzB,CAAC;MACD;MACAtB,WAAW,CAAEuB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAES,UAAU,CAAC,CAAC;IAC9D,CAAC,CAAC,CACDpB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC,CACDoB,OAAO,CAAC,MAAM;MACb/B,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;;EAED,oBACEN,OAAA;IAAKsC,SAAS,EAAC,kDAAkD;IAAAC,QAAA,eAE/DvC,OAAA,CAACR,aAAa;MAAC8C,SAAS,EAAC,6CAA6C;MAAAC,QAAA,gBACpEvC,OAAA,CAACL,kBAAkB;QAAC2C,SAAS,EAAC;MAA2C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErD,CAAC,eACrB3C,OAAA,CAACP,WAAW;QAAC6C,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAC/ClC,SAAS,iBACRL,OAAA;UAAKsC,SAAS,EAAC,uDAAuD;UAAAC,QAAA,gBACpEvC,OAAA,CAACH,MAAM;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEU,CAAC,eACd3C,OAAA,CAACN,YAAY;QACX4C,SAAS,EAAC,4CAA4C;QACtDM,WAAW,EAAC,mBAAmB;QAC/BC,MAAM,EAAEvB,WAAY;QACpBwB,YAAY,EAAE,KAAM;QACpBC,cAAc,EAAC,iCAAiC;QAChDC,mBAAmB,EAAC;MAAe;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIb,CAAC;AAEV,CAAC;AAACzC,EAAA,CAtGID,aAAa;AAAAgD,EAAA,GAAbhD,aAAa;AAwGnB,eAAeA,aAAa;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}