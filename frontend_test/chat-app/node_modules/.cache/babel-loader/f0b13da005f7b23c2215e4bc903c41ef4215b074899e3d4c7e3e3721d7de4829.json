{"ast":null,"code":"var _jsxFileName = \"/Users/coby/projects/movie_recommendation/cinematch/frontend/chat-app/src/components/chatUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ChatContainer, MessageList, MessageInput, ConversationHeader, Message, Loader } from \"@chatscope/chat-ui-kit-react\";\nimport \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\"; // Ensure you import the styles\nimport \"../App.css\"; // Import your custom CSS for dark mode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async content => {\n    setIsLoading(true); // Start loading\n    // Add the user's message with direction 'outgoing'\n    const userMessage = {\n      message: content,\n      direction: \"outgoing\"\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/recommend\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: content\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      const botMessage = {\n        message: responseData.response,\n        direction: \"incoming\" // Responses from the bot are 'incoming'\n      };\n\n      // Add the bot's response message\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Could not send the message to the API\", error);\n    } finally {\n      setIsLoading(false); // End loading\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ConversationHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          model: {\n            message: msg.message,\n            direction: msg.direction\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(Loader, {\n          size: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-container\",\n        children: /*#__PURE__*/_jsxDEV(MessageInput, {\n          placeholder: \"Type message here\",\n          onSend: sendMessage,\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"+ulxvKkTWAWfR4RiHtjSFrF/5QM=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","ChatContainer","MessageList","MessageInput","ConversationHeader","Message","Loader","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","isLoading","setIsLoading","sendMessage","content","userMessage","message","direction","prevMessages","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","responseData","json","botMessage","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","model","size","placeholder","onSend","_c","$RefreshReg$"],"sources":["/Users/coby/projects/movie_recommendation/cinematch/frontend/chat-app/src/components/chatUI.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ChatContainer,\n  MessageList,\n  MessageInput,\n  ConversationHeader,\n  Message,\n  Loader,\n} from \"@chatscope/chat-ui-kit-react\";\nimport \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\"; // Ensure you import the styles\nimport \"../App.css\"; // Import your custom CSS for dark mode\n\nconst ChatComponent = () => {\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendMessage = async (content) => {\n    setIsLoading(true); // Start loading\n    // Add the user's message with direction 'outgoing'\n    const userMessage = {\n      message: content,\n      direction: \"outgoing\",\n    };\n\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/recommend\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ message: content }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const responseData = await response.json();\n      const botMessage = {\n        message: responseData.response,\n        direction: \"incoming\", // Responses from the bot are 'incoming'\n      };\n\n      // Add the bot's response message\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error(\"Could not send the message to the API\", error);\n    } finally {\n      setIsLoading(false); // End loading\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <ChatContainer>\n        <ConversationHeader>\n          {/* Place your conversation header content here */}\n        </ConversationHeader>\n        <MessageList>\n          {messages.map((msg, index) => (\n            <Message\n              key={index}\n              model={{\n                message: msg.message,\n                direction: msg.direction,\n              }}\n            />\n          ))}\n          {isLoading && <Loader size=\"md\" />} {/* Show loading indicator */}\n        </MessageList>\n        <div className=\"message-input-container\">\n          <MessageInput\n            placeholder=\"Type message here\"\n            onSend={sendMessage}\n            className=\"message-input\"\n          />\n        </div>\n      </ChatContainer>\n    </div>\n  );\n};\n\nexport default ChatComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}