{"ast":null,"code":"var _jsxFileName = \"/Users/coby/projects/movie_recommendation/cinematch/frontend/chat-app/src/components/Practice.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { ChatContainer, MessageList, MessageInput, ConversationHeader, Message, Loader } from \"@chatscope/chat-ui-kit-react\";\nimport { concat, after, useListener } from \"polyrhythm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingIndicator = ({\n  timeout = 5000\n}) => {\n  _s();\n  const [isTyping, setTyping] = useState(false);\n  const autoTimeoutTyper = () => concat(after(0, () => setTyping(true)), after(timeout, () => setTyping(false)));\n  useListener(/message\\/edit\\/(?!me)/, autoTimeoutTyper, {\n    mode: \"replace\"\n  });\n  useListener(/message\\/from/, () => setTyping(false));\n  return isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message__typing\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 22\n  }, this);\n};\n_s(TypingIndicator, \"ifBLhzhN/rCFqt0beUzPatkOLmM=\", false, function () {\n  return [useListener, useListener];\n});\n_c = TypingIndicator;\nexport default TypingIndicator;\nvar _c;\n$RefreshReg$(_c, \"TypingIndicator\");","map":{"version":3,"names":["React","ChatContainer","MessageList","MessageInput","ConversationHeader","Message","Loader","concat","after","useListener","jsxDEV","_jsxDEV","TypingIndicator","timeout","_s","isTyping","setTyping","useState","autoTimeoutTyper","mode","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coby/projects/movie_recommendation/cinematch/frontend/chat-app/src/components/Practice.js"],"sourcesContent":["import React from \"react\";\nimport {\n  ChatContainer,\n  MessageList,\n  MessageInput,\n  ConversationHeader,\n  Message,\n  Loader,\n} from \"@chatscope/chat-ui-kit-react\";\n\nimport { concat, after, useListener } from \"polyrhythm\";\n\nconst TypingIndicator = ({ timeout = 5000 }) => {\n  const [isTyping, setTyping] = useState(false);\n\n  const autoTimeoutTyper = () =>\n    concat(\n      after(0, () => setTyping(true)),\n      after(timeout, () => setTyping(false))\n    );\n\n  useListener(/message\\/edit\\/(?!me)/, autoTimeoutTyper, { mode: \"replace\" });\n  useListener(/message\\/from/, () => setTyping(false));\n\n  return isTyping && <div className=\"chat-message__typing\" />;\n};\n\nexport default TypingIndicator;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,kBAAkB,EAClBC,OAAO,EACPC,MAAM,QACD,8BAA8B;AAErC,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,OAAO,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMC,gBAAgB,GAAGA,CAAA,KACvBX,MAAM,CACJC,KAAK,CAAC,CAAC,EAAE,MAAMQ,SAAS,CAAC,IAAI,CAAC,CAAC,EAC/BR,KAAK,CAACK,OAAO,EAAE,MAAMG,SAAS,CAAC,KAAK,CAAC,CACvC,CAAC;EAEHP,WAAW,CAAC,uBAAuB,EAAES,gBAAgB,EAAE;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EAC3EV,WAAW,CAAC,eAAe,EAAE,MAAMO,SAAS,CAAC,KAAK,CAAC,CAAC;EAEpD,OAAOD,QAAQ,iBAAIJ,OAAA;IAAKS,SAAS,EAAC;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D,CAAC;AAACV,EAAA,CAbIF,eAAe;EAAA,QASnBH,WAAW,EACXA,WAAW;AAAA;AAAAgB,EAAA,GAVPb,eAAe;AAerB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}